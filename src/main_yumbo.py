# This must be the first line
import pandas as pd
pd.options.mode.copy_on_write = True

import numpy as np
import os
import streamlit as st

import romz_ampl
import romz_excel
import sbar
import report_ampl
import report_experts
import report_stats
import report_summary
import report_tasks


def show_main_panel():
    report_summary.show()
    report_experts.show()
    report_tasks.show()
    report_stats.show()
    report_ampl.show()


def set_page_config():
    st.set_page_config(page_title="Yumbo",layout="wide")
    # css = '''
    # <style>
    #     [data-testid="stSidebar"]{
    #         min-width: 400px;
    #         max-width: 800px;
    #     }
    # </style>
    # '''
    # st.html(css)


def show_page_header():
    st.title(":red[Yumbo.] Scheduling, Planning and Resource Allocation")
    st.subheader("Zbigniew Romanowski, Pawe≈Ç Koczyk")
    st.caption("Source code, documentation and sample Excel input files can be found on [Yumbo's](https://github.com/romz-pl/yambo) GitHub repository.")
    st.caption("_{d}_".format(d=pd.Timestamp.now().strftime("%d %B %Y, %H:%M:%S %p")))


def show_yumbo_description():
    st.divider()
    cols = st.columns(2)

    # The cols[1] and cols[2] are not used!
    with cols[0]:
        dd = os.path.dirname(__file__)
        with open(f"{dd}/../doc/yumbo.md", "r") as f:
            st.markdown(f'''{f.read()}''')

    st.divider()
    st.image(f"{dd}/../doc/yumbo.webp")
    st.caption("Image generated by ChatGPT")


def zero_time_counters():
    charts = ["imgb", "imgg", "imggsum", "imgh", "imghsum", "imgs", "imgt", "imgtsum", "imgw", "imge"]
    for v in charts:
        st.session_state.stats[f"{v}:cnt"] = 0
        st.session_state.stats[f"{v}:ttime"] = 0
        st.session_state.stats[f"{v}:nbytes"] = 0

    st.session_state.stats["ampl:ttime"] = 0
    st.session_state.stats["excel:ttime"] = 0


def init_sesion():
    if 'glb' not in st.session_state:
        st.session_state.glb = dict()

    if 'mprob' not in st.session_state:
        st.session_state.mprob = dict()

    if 'stats' not in st.session_state:
        st.session_state.stats = dict()

    if 'amplsol' not in st.session_state:
        st.session_state.amplsol = pd.DataFrame()


def upload():
    with st.sidebar:
        uploaded_file = sbar.get_uploaded_file()
        if uploaded_file != None:
            romz_excel.load(uploaded_file)
            sbar.show()

    if uploaded_file == None:
        show_yumbo_description()
        return


def solve_problem():
    try:
        romz_ampl.solve()
    except Exception as e:
        st.subheader(f":red[Exception during solving process.] {e}")
        report_ampl.show_ampl_data_file()
        return


def main():
    init_sesion()
    set_page_config()
    show_page_header()
    zero_time_counters()
    upload()
    solve_problem()
    show_main_panel()


######################## CALL MAIN FUNCTION ##################

if __name__ == "__main__":
    main()

